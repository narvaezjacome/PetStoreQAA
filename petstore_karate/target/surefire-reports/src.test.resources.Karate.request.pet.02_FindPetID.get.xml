<testsuite failures="1" name="src/test/resources/Karate/request/pet/02_FindPetID/get.feature" skipped="0" tests="4" time="2.75521">
  <testcase classname="src.test.resources.Karate.request.pet.02_FindPetID.get" name="Check the service GET" time="1.60578">
    <failure message="get.feature:19 - path: $, actual: {&quot;photoUrls&quot;:[&quot;#(faker.creature.animal.avatar.image)&quot;],&quot;name&quot;:&quot;#(faker.creature.animal.name)&quot;,&quot;id&quot;:2,&quot;category&quot;:{&quot;name&quot;:&quot;#(faker.creature.animal.breed)&quot;,&quot;id&quot;:2},&quot;tags&quot;:[{&quot;name&quot;:&quot;#(faker.creature.animal.tag.name)&quot;,&quot;id&quot;:2}],&quot;status&quot;:&quot;#(faker.creature.animal.status)&quot;}, expected: {id=#number, category={id=#number, name=#string}, name=#string, photoUrls=[&quot;#string&quot;], s&#13;&#10;  &quot;tags&quot;=[{&quot;id&quot;:&quot;#number&quot;,&quot;name&quot;:&quot;#string&quot;}], status=#string}, reason: all key-values did not match, expected has un-matched keys: [s&#13;&#10;  &quot;tags&quot;]">* url url ................................................................. passed
* def responseGet = read('classpath:Karate/request/pet/02_FindPetID/responseGet.json') . passed
Given path 'pet', id ...................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match response == responseGet ......................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: get.feature:19 - path: $, actual: {"photoUrls":["#(faker.creature.animal.avatar.image)"],"name":"#(faker.creature.animal.name)","id":2,"category":{"name":"#(faker.creature.animal.breed)","id":2},"tags":[{"name":"#(faker.creature.animal.tag.name)","id":2}],"status":"#(faker.creature.animal.status)"}, expected: {id=#number, category={id=#number, name=#string}, name=#string, photoUrls=["#string"], s&#13;
  "tags"=[{"id":"#number","name":"#string"}], status=#string}, reason: all key-values did not match, expected has un-matched keys: [s&#13;
  "tags"]&#13;
	at ✽.And match response == responseGet (get.feature:19)&#13;

And assert response.support.text == "To keep ReqRes free, contribuitions" . skipped</failure>
  </testcase>
  <testcase classname="src.test.resources.Karate.request.pet.02_FindPetID.get" name="Find a pet by ID incorrect" time="0.389579">
    <system-out>* url url ................................................................. passed
* def responseGet = read('classpath:Karate/request/pet/02_FindPetID/responseGet.json') . passed
Given path 'pet', id ...................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match response == responseGet ......................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: get.feature:19 - path: $, actual: {"photoUrls":["#(faker.creature.animal.avatar.image)"],"name":"#(faker.creature.animal.name)","id":2,"category":{"name":"#(faker.creature.animal.breed)","id":2},"tags":[{"name":"#(faker.creature.animal.tag.name)","id":2}],"status":"#(faker.creature.animal.status)"}, expected: {id=#number, category={id=#number, name=#string}, name=#string, photoUrls=["#string"], s&#13;
  "tags"=[{"id":"#number","name":"#string"}], status=#string}, reason: all key-values did not match, expected has un-matched keys: [s&#13;
  "tags"]&#13;
	at ✽.And match response == responseGet (get.feature:19)&#13;

And assert response.support.text == "To keep ReqRes free, contribuitions" . skipped
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request "@#$%" ........................................................ passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed</system-out>
  </testcase>
  <testcase classname="src.test.resources.Karate.request.pet.02_FindPetID.get" name="Find a pet by ID incorrect" time="0.377429">
    <system-out>* url url ................................................................. passed
* def responseGet = read('classpath:Karate/request/pet/02_FindPetID/responseGet.json') . passed
Given path 'pet', id ...................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match response == responseGet ......................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: get.feature:19 - path: $, actual: {"photoUrls":["#(faker.creature.animal.avatar.image)"],"name":"#(faker.creature.animal.name)","id":2,"category":{"name":"#(faker.creature.animal.breed)","id":2},"tags":[{"name":"#(faker.creature.animal.tag.name)","id":2}],"status":"#(faker.creature.animal.status)"}, expected: {id=#number, category={id=#number, name=#string}, name=#string, photoUrls=["#string"], s&#13;
  "tags"=[{"id":"#number","name":"#string"}], status=#string}, reason: all key-values did not match, expected has un-matched keys: [s&#13;
  "tags"]&#13;
	at ✽.And match response == responseGet (get.feature:19)&#13;

And assert response.support.text == "To keep ReqRes free, contribuitions" . skipped
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request "@#$%" ........................................................ passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request "doggie" ...................................................... passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed</system-out>
  </testcase>
  <testcase classname="src.test.resources.Karate.request.pet.02_FindPetID.get" name="Find a pet by ID incorrect" time="0.382421">
    <system-out>* url url ................................................................. passed
* def responseGet = read('classpath:Karate/request/pet/02_FindPetID/responseGet.json') . passed
Given path 'pet', id ...................................................... passed
When method GET ........................................................... passed
Then status 200 ........................................................... passed
And match response == responseGet ......................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: get.feature:19 - path: $, actual: {"photoUrls":["#(faker.creature.animal.avatar.image)"],"name":"#(faker.creature.animal.name)","id":2,"category":{"name":"#(faker.creature.animal.breed)","id":2},"tags":[{"name":"#(faker.creature.animal.tag.name)","id":2}],"status":"#(faker.creature.animal.status)"}, expected: {id=#number, category={id=#number, name=#string}, name=#string, photoUrls=["#string"], s&#13;
  "tags"=[{"id":"#number","name":"#string"}], status=#string}, reason: all key-values did not match, expected has un-matched keys: [s&#13;
  "tags"]&#13;
	at ✽.And match response == responseGet (get.feature:19)&#13;

And assert response.support.text == "To keep ReqRes free, contribuitions" . skipped
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request "@#$%" ........................................................ passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request "doggie" ...................................................... passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed
* url url ................................................................. passed
Given path 'pet', id ...................................................... passed
And request 123.123 ....................................................... passed
When method GET ........................................................... passed
Then status 404 ........................................................... passed</system-out>
  </testcase>
</testsuite>
